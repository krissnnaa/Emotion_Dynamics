nightmare.Anger,nightmare.Sadness,nightmare.Fear,nightmare.Joy,nightmare.Comments,
0,0.6,0,0,"@fishcharlie unfortunately, not yet :/",
0,0.2,0,0,same issue,
0.8,0,0,0,@rpascal horrible solution.,
0,0,0,0,@iamdubx would you be able to provide a cleaner solution for us?,
0,0.2,0,0,i've got the same problem  if you are checking more than 1 url - you can try reuse nightmare instance - this may save you a few seconds from my observations.,
0,0.2,0,0,"sorry, i just found you can group actions with ""use"":  https://github.com/rosshinkley/nightmare-examples/blob/master/docs/beginner/use.md",
0,0,0,0,@lai32290  this helped #1082,
0,0,0,0,@matthewmueller code execution and object serialization and inspection immediately come to mind. try passing an object of any complexity back to the app using the devtools protocol and you'll start to feel some of the pain. other than that i can't recall specifically what else i had in mind - my post up there was just about 6 months ago - but the limitations and baked-in advantages to electron over the devtools is pretty thoroughly documents on the interwebs and the googs.,
0,0.2,0,0,"@nquoctuan i just run into the same issue. the passed preload script replaces [nightmare preload script](https://github.com/segmentio/nightmare/blob/master/lib/preload.js), so just load it from top of your preload script. that works for me.```require('nightmare/lib/preload')```",
0,0.1,0,0.1,"i have not found a solution to the .csv download problem however, by overwriting the form data using `.evaluate()` i was able to download the file in the same frame",
0,0.1,0,0,the problem occurred because i was running electron from the terminal integrated in the atom ide.,
0,0,0,0,when will it be pushed to npm?,
0,0,0,0.2,this feels like a pretty common use of the api. might be worth noting in the tutorial/docs.,
0,0,0.2,0,"@ejcx while it's not published to npm, every package (on windows) using nightmare as a dependency is still vulnerable.can you tell us when you might be able to push the patch to npm and if you plan to deprecate the previous releases?thanks for your time.",
0,0,0,0.6,"ok, moved to puppeteer, it's working great! a few gotchas in automation, but it's good now.",
0,0,0,0,"fyi this was a cors issuecypress.io gets around this by allowing cors to be disabled:`{ ""chromewebsecurity"": false }` - inside cypress.json",
0,0,0,0,"this is a __browser automation tool__ not a test runner.there are may usages of this. crawler, debug, test runner is one of those, so no need to change readme.",
0,0,0,0,"this issue should be re-opened and resolved, otherwise i'm going with puppeteer or chromeless  @nylen yep puppeteer looks like the way to go",
0,0,0,0,@tforbus can you post the full code? when i follow the suggestions here i get:`typeerror: fn is not a function`,
0,0,0,0,note that it seems sandboxing require root,
0,0,0,0,"you'll have to elaborate on ""the first of n selectors"". i understand what you've stated to mean, when any one of a number of selectors is found. if that is the case, that is exactly what this pr does.  i see both cases having merit, but for me this is the most useful case. i have been having troubles when navigating to a page where it can be one of two pages. .wait() with a fixed delay => .evaluate is unreliable, so being able to look for 'this' or 'that' is a reliable alternative. the most common use i see, is login success/fail, and waiting for either page. i'm also using it for a gradual rollout on ci/cd, and detecting the old version vs new version. i also see these cases being more common than a .wait() with multiple selectors for all, but i am obviously biased.this pr is about 20 lines, very 'cheap', and doesn't modify any existing functionality. would love to see it in the codebase, but if i'm the only one, i'll see if i can make it into an external module.",
0,0,0,0,:hand:  @idchlife   so ... yeah: `nightmare electron child process exited with code 1: general error - you may need xvfb`it seems like there should be an alternative for running headless browser testing.. why do we have to install electron to do so? lynx!?!?!?!,
0,0,0,0,@k1r0s take a look at puppeteer i like it a lot. its similar to nightmare https://github.com/googlechrome/puppeteer,
0,0.4,0,0,unfortunately we don't use jasmine or whatever that is :) we use tape which does not have setup/teardown methods.what kind of race condition are you worried about?,
0,0,0,0.2,"@matthewmueller actually i resolved this error in the topic somewhere here... anyway, this issue is not relevant, for more info for those experiencing issue: do remember, you do not need using xvfb.startsync() manually, find the solution, it's out there. this issue was a long time ago and i can't at the moment find code but solution exists and it's on the internet.",
0,0,0,0,"still get them. it's supposed to show me title only if it loads.loads okay first time. stops loading from second time.then changed proxy/vpn, loaded first time, stopped from second time.![image](https://user-images.githubusercontent.com/8284972/36393066-376df15a-15d8-11e8-90df-9834c4d923d5.png)",
0.1,0,0.2,0,no progress ?,
0,0,0,0,"if it helps, here’s a version of @ri0ter’s link from the initial post that has the highlight in the correct place: https://github.com/segmentio/nightmare/blob/dbb1b6413389eb551b9bc361d66b316172f4dbb8/lib/frame-manager.js#l102-l106the frame manager works by highlighting and unhighlighting a portion of the page (in the top left corner) to force a frame (in animation terms, not geometry terms) to be rendered, which ensures that the frame buffer in the browser process (not renderer process, which is already good) is up-to-date.unfortunately, the frame manager signals that its done its job after sending the command to hide the highlight, but not before waiting for *a frame where the highlight is hidden.* so sometimes the frame you get in the captured screenshot has the highlight, which is the pixel @ri0ter is talking about.as noted before, [the fix described in my first commment on #955](https://github.com/segmentio/nightmare/issues/955#issuecomment-274200822) is the solution to this problem (short of fixing electron so that calls to capture the page always have an up-to-date frame buffer, which was a hard problem a year ago—not sure if chromium internals have changed enough to make that easier now).  if the merged pr you are referencing is #945, it does not solve this issue (though it was blocking the solution/the work for this issue).",
0,0,0,0,i am just adding my 2 cents that i have never had wait('selector') work until i changed the `pollinterval ` value to 50 as sbacic detailed above. this indicates there is still an issue that default pollinterval of 250 is not sufficient or there is a bug.,
0,0,0,0,"`➜ zhichongliang@zhichongmacmini   npm view nightmare version2.10.0➜ zhichongliang@zhichongmacmini   node test_index.jsprocess start ok...proxy : localsearch failed: { message: 'navigation error',  code: -3,  details: '',  url: 'https://finance.qq.com/a/20180124/027737.htm' }`i have already update nightmare to 2.10.0, but however it came the same error.",
0,0,0.2,0,"i got a way to save the response data, [url,](https://docs.slimerjs.org/current/api/webpage.html#webpage-onresourcereceived) but i wonder how can i solve this with nightmare or electron ???",
0,0,0,0,should i be using a function other than `evaluate_now`?,
0,0,0,0.2,alright - thank you @matthewmueller,
0,0,0.1,0,i'm still seeing this on osx with 2.10.0.,
0,0,0,0,this is just the way that chrome renders strings split over multiple lines in a tag.,
0,0,0,0,"hey, at the end i did it like this .evaluate(() => array.from(document.queryselectorall('.xd')).map(element => element.innertext))",
0,0.1,0,0,the plugin doesn't work inside an iframe: https://github.com/rosshinkley/nightmare-upload/issues/9  https://github.com/rosshinkley/nightmare-upload didn't work when inside an iframe: https://github.com/rosshinkley/nightmare-upload/issues/9,
0,0,0,0.3,just run this code. works fine in vagrant ubuntu 16.04 with node 8.9.4.,
0,0.3,0,0,@paul-hess i tried it. it does not work even with `new` keyword.,
0,0.1,0,0,"hi @matthewmueller i am experiencing (nightmare is behaving intermittently) something similar, for example i cloned the following repo https://github.com/hellokoding/registration-login-spring-hsql and started it with: mvn spring-boot:runon the terminal i runfor i in {1..999}; do echo ""-- ------ try number $i -- -------"";npx mocha test/test-login-new.js; doneand the content of the js is (the app lets you register a user in memory, in my case user@gmail.com/password was created):`const nightmare = require('nightmare');const expect = require('chai').expect;const nightmare = nightmare({ show: false });describe('testing login', () => {  it('visits login form', (done) => {    nightmare      .goto('http://localhost:8080')      .insert('#username', 'user@gmail.com')      .insert('#password', 'password')      .click('button.btn.btn-lg.btn-primary')      .wait('#logoutform')      .evaluate(() => document.queryselector('h2').innertext)      .then((h2text) => {        expect(h2text.includes('welcome')).to.equal(true);        done();      })      .catch(error => done(error));  });});`i added the missing ids; anyway the test starts failing in the two hundred something try. below there is an output of a code run-- ------ try number 240 -- -------  testing login    ✓ visits login form (2426ms)  1 passing (2s)-- ------ try number 241 -- -------  testing login    1) visits login form  0 passing (30s)  1 failing  1) testing login visits login form:     error: timeout of 30000ms exceeded. for async tests and hooks, ensure ""done()"" is called; if returning a promise, ensure it resolves.  -- ------ try number 242 -- -------  testing login    1) visits login form  0 passing (30s)  1 failing  1) testing login visits login form:     error: timeout of 30000ms exceeded. for async tests and hooks, ensure ""done()"" is called; if returning a promise, ensure it resolves.  -- ------ try number 243 -- -------  testing login    1) visits login form  0 passing (30s)  1 failing  1) testing login visits login form:     error: timeout of 30000ms exceeded. for async tests and hooks, ensure ""done()"" is called; if returning a promise, ensure it resolves.  -- ------ try number 244 -- -------  testing login    1) visits login form  0 passing (30s)  1 failing  1) testing login visits login form:     error: timeout of 30000ms exceeded. for async tests and hooks, ensure ""done()"" is called; if returning a promise, ensure it resolves.  -- ------ try number 245 -- -------  testing login    1) visits login form  0 passing (30s)  1 failing  1) testing login visits login form:     error: timeout of 30000ms exceeded. for async tests and hooks, ensure ""done()"" is called; if returning a promise, ensure it resolves.  -- ------ try number 246 -- -------  testing login    ✓ visits login form (17769ms)  1 passing (19s)-- ------ try number 247 -- -------  testing login    ✓ visits login form (4541ms)  1 passing (8s)-- ------ try number 248 -- -------  testing login    ✓ visits login form (11620ms)  1 passing (12s)-- ------ try number 249 -- -------  testing login    ✓ visits login form (5130ms)  1 passing (8s)  just to add, the problem is that the wait function does not always work as expected",
0,0.1,0,0,same thing @ijshah how did you solve it?,
0,0,0,0,@basherr what's the solution?,
0,0,0,0,"so is it possible to run nightmare inside electron since https://github.com/segmentio/nightmare/releases/tag/3.0.0 ? if so, how?",
0,0,0,0,@jimtheman @bembi454 i'm just referencing code from the previous posts.here's a quick example. let me know if this makes sense.```// extend.jsmodule.exports = url => nightmare => nightmare.goto(url)// index.jsconst mygoto = require('./extend')nightmare.use(mygoto('https://github.com'))```,
0,0.1,0,0,@crcms somehow i feel it's due to the directory. like it says it's in dist folder. maybe a relative path issue?,
0,0,0,0,@davebream you can only pass `strings/int/boolean` as parameter. check this https://github.com/segmentio/nightmare#evaluatefn-arg1-arg2,
0,0,0.1,0,"getting the same issue here myself, definitely related but should create new issue?",
0,0,0,0,the nightmare-upload plugin not work with the 3.0... this feature should be included in nightmarejs directy.,
0,0,0,0,the vulnerabilities in electron are - [cve-2018-1000006](https://electronjs.org/blog/protocol-handler-fix) - critical severity- [cve-2018-1000136](https://nvd.nist.gov/vuln/detail/cve-2018-1000136) - high severity- [cve-2018-1000118](https://nvd.nist.gov/vuln/detail/cve-2018-1000118) - moderate severitythe suggestion from github is to update electron dependency to 1.8.2-beta5,
0,0,0,0.2,"thanks, @matthewmueller :d",
0,0,0,0.4,@crainar  thanks for posting your solution! i had the same problem with my raspberry pi 3 and installing electron 1.7.12 works!,
0,0,0,0,"```    .evaluate(() => {        var allbuttons = document.getelementsbytagname('button');        for (var i = 0; i < allbuttons.length; i++) {            if (allbuttons[i].innertext == 'log in') allbuttons[i].id = 'loginbutton';        }    })    .click('button[id=loginbutton]')```i was looking for same, but ended up with this",
0,0.1,0,0,"@chaoliou sorry for late reply. there is no need for copy `/node_modules/electron` to `/node_modules/nightmare/node_modules/electron` and the reason why there is a module not found error is that the electron path should be relative to where you are calling it. in the project linked below, i am using `../node_modules/nightmare/node_modules/electron`. that is the location where i can find the electron module. also, my situation is that it shows that nightmare module is not found, but not browser keeps opening new window. i uploaded a workable project. hope this can help to clarify things. https://github.com/jacky-ttt/nightmare-in-electron-appplease read the readme.md for instructions to run the project.",
0,0.2,0,0," @ijshah how did you solve it? can you please explain i increase wait time too..but i wont works,the issue is persists",
0,0.1,0,0,i have the same error.,
0,0,0,0.1,"@timnz thanks for the code sample, i am also a js n00b struggling with this.  how can i capture the return value from the following line in your code? (so that i can subsequently do stuff with the return value **_and_** the cookies)```return ""do something with dom""```thanks,",
0,0,0.2,0,"i am facing the same issue. quick question @1marty4sale, what buildpacks did you install and in what order?",
0,0,0,0.2,i resolve this issue. if you have same issue you can use websocket,
0,0,0.2,0,@danielravina i am curious of the same fact. is there anything i am missing ? where can we find details about the implementation / way to handle ?,
0,0,0,0,you can try to add this css property : `-webkit-print-color-adjust: exact`(see : https://github.com/googlechrome/puppeteer/issues/2182),
0,0.3,0,0,"i have exactly the same problem, can't catch this error and no informations except `code null : undefined` it just suspend the process",
0,0,0,0.4,"it really helped me a lot on the code, thanks !",
0,0,0,0,@val7000 were you able to resolve it ?,
0,0,0,0,"i think this message should be reviewed, even because a `.type()` can throw this error and make confusion, since the user asked to ""type"", and not to ""focus"". some can say ""yeah but to type you have to focus"" but it's still unclear, since one may think the `.type()` method just sets the element value.",
0,0,0,0,is there any additional data we can provide to help fixing this?,
0,0.2,0.1,0,@edoardoo i still don't know why it's happening.,
0,0,0,0.4,"@matthewmueller thanks for the last comment; very helpful for understanding the flow/parts. my goal is to modify the details.uploaddata posted in the request being made. i have successfully parsed out and updated the details.uploaddata[0].bytes information that i needed to, but i'm not seeing an option in electron's ""onbeforerequest"" to set this information in the callback so that it actually modifies the data posted when the request is made... i am going to keep digging around the electron manual, but i was wondering if you already had developed a way to do this that you could share. thanks!",
0,0,0,0,var run = function*(){  var results = [];  for(var i=0; i<5000000; i++){    var result = yield nightmare.goto('https://xxxx.buy_car_url.com').exists('.select-all');    if(!result)    {    	console.log('can not buy');    	sleep(1000); //this is a function can let it sleep 1 second    }	else	{,
0,0,0.1,0.3,repo maintainers should never close an issue that is unresolved. i use [puppeteer](https://github.com/googlechrome/puppeteer) now and it works great.,
0,0,0,0,"i did try using:```await page.click('.id');await page.keyboard.down('control');await page.keyboard.press('keya');await page.keyboard.up('control');await page.keyboard.press('backspace');```to emulate ctrl+a and backspace to empty the field, but this doesn't work on macs (as cmd+a is handled by the os - see https://github.com/googlechrome/puppeteer/issues/1313 ) - however,```const elementhandle=await page.$('.id');await elementhandle.click();await elementhandle.focus();// click three times to select allawait elementhandle.click({clickcount: 3});await elementhandle.press('backspace');await elementhandle.type('text');```does seem to work.",
0,0,0,0,"guess 'nightmare' fitted nicely in the stack of other headless testing tools, like zombiejs or phantomjs. seems only likely that zombies and phantoms lead to nightmares eventually :-)yes, sementio/nightmare === nightmarejs.",
0,0,0,0,"you can probably solve this issue using `async-await`.```nightmare// goto() etc..evaluate(() => {    return [...document.queryselectorall('a.somelink')]      .map(el => el.href)  })  .then(result => {    result.foreach((val, i) => {      nightmare        .goto(val)        .evaluate(          () => {          return array.from(document.queryselectorall('a.link')).map(          element => ({""link"" : element.href})          );        })        .end()        .then((data) => {          let x = scrapetheselinks(data);          x.then((data) => {            // use the data returned from all these links.          });        })    })  })  async function scrapetheselinks(data){    let datafromlinks = [];    data.foreach((el) => {      const x = await scraperforlinks(el);      data.push(x);    });    return datafromlinks;  }  function scraperforlinks(link){    nightmare      .evaluate(() => {})      // write the rest of the code for each link  }```",
0,0.2,0,0,i have the same problem,
0,0,0,0,@jarek-foksa i made a pull request for the .topng https://github.com/segmentio/nightmare/pull/1454,
0,0,0,0.4,thank you @wiliame . saves me a lot of time.,
0,0,0,0,you can give up nightmare's click .you can use jquery and evaluate to slove this questioneg:    .evaluate(()=>{      $(document).find('#my-list li a').click(), })
0,0.2,0,0,"i have the same issue and i don't know how to fix now. help? @idchlife   @idchlife i am not sure if i understood at all what you said. here's my situation:i run nightmare using `pm2` or `forever`, but when nightmare is about to end(), it launches the `sigint` signal, and this makes `pm2` or `forever` kill the process for both nightmare + the server running itself.makes sense to you? is somehow related to this?  @idchlife let me paste the output for you (i am already using debug):this is the end of the log:```bash......fri, 08 jun 2018 20:37:36 gmt nightmare:actions .evaluate() fn on the pagefri, 08 jun 2018 20:37:36 gmt nightmare:log did-frame-finish-load [{},true]fri, 08 jun 2018 20:37:36 gmt nightmare:log did-finish-load [{}]fri, 08 jun 2018 20:37:36 gmt nightmare:log page-favicon-updated [{},[""https://www.sifge.caixa.gov.br/x.ico""]]fri, 08 jun 2018 20:37:36 gmt nightmare:actions .pdf()fri, 08 jun 2018 20:37:36 gmt nightmare:actions .pdf() captured with length 82243fri, 08 jun 2018 20:37:36 gmt nightmare electron child process exited with code 0: success!```as you can see: this part: `fri, 08 jun 2018 20:37:36 gmt nightmare electron child process exited with code 0: success!` is sending a kill signal. so.... `pm2` or `forever` will understand that you want to kill their process.  @idchlife i was able to make it work by running the process using unix, not pm2 or forever. but that's not the best solution or what i wanted.this works because the signal ends just for the node process.```bashdebug=* xvfb-run -a --server-args=\""-screen 0 1024x768x24\"" node queueconsumer/index.js 2>&1 > output.log &```  @idchlife here's the situation:- script.js is a file that pulls something from a database and use nightmare. (imagine script.js as a `setinterval() with a command to run `take-pdf.js`)- i need something to put my script.js to run in the background (linux/aws)- i decided to use `pm2` or `forever`, ok?- my script.js, calls another script called `take-pdf.js` with nightmare commands to access 1 page and print a pdf.- script.js runs perfectly and generates the pdf using `take-pdf.js`- but when we call `nightmare.end()` inside of `take-pdf.js`, electron sends a kill signal, and this signal is also passed to `pm2`/`forever`.- `pm2`/`forever` kills the ""background process"" of script.js.is that simple to understand? :)",
0,0.3,0,0,bump -- i'm having the same issue  @psq-cin did you ever figure out how to get confirm/alert dialogs to disappear? i'm having issues where frames are rendering them and i can't get them to stop showing up.,
0,0.3,0,0,"faced same issue, looks like the dimension of the screenshot is limited by the dimension of monitor, even set show = false.  after some digging, it's should be actually an issue from electron or chromium, and i found passing maxwidth & maxheight can solve my case. below is the sample code i've tested and it can generate a full page screenshot:```javascriptvar nightmare = require('nightmare'),    vo = require('vo');function * run() {    var nightmare = new nightmare({                    show: false,        frame: false,        maxheight:16384,        maxwidth:16384,                width: 1200,        height: 1024,     });    var dimensions = yield nightmare.goto('https://github.com/')        .wait('body')        .evaluate(function() {            var body = document.queryselector('body');            return {                width: body.scrollwidth,                height: body.scrollheight            }        });    console.log(dimensions);    yield nightmare.viewport(dimensions.width, dimensions.height)        .wait(1000)        .screenshot('sample.png');        yield nightmare.end();}vo(run)(function() {    console.log('done');});```the size of maxheight & maxwidth are refer to #906",
0,0.2,0,0,i ran into a similar issue after updating. it looks like electron is actually crashing in more recent builds until you get to 2.0.2 on armv7l.i put together a version that bumps the electron version to 2.0.2 and now things are back to working just fine for me on my rpi.you can find it here: #1466,
0,0.1,0,0,"thank you for the reply. i tried maxheight and maxwidth, but in that case i obtained not only full page screenshot but lots of white space below.",
0,0,0,0.1,"nevermind, solved creating a custom action with nightmare.action and setinterval inside the function.",
0,0,0.1,0,"@allanjsx & @carlosmc nightmare development has been grinding to a halt over the past year, i would recommend switching to [puppeteer](https://www.npmjs.com/package/puppeteer).(also unsubscribing from this issue so for any replies, please @mention me.)",
0,0,0,0,same thing today!,
0,0,0,0,any solution?,
0,0,0.1,0,@matthewmueller will the problem be solved in which version?,
0,0,0,0,i think it has something to do with the latest nodejs version. i downgraded from v10.6.0 to 10.5.0 and everything works now.,
0,0,0.2,0,anybody here who can help me on this ?,
0,0.2,0,0,"not fixed in nodejs v10.7.0.error just moved 1 line> assertion failed: frame_header.payload_length == sizeof xfer_info, file src\win\pipe.c, line 1708`choco install nodejs --version 10.5.0 --allow-downgrade` will not work.",
0,0,0,0,"nightmare use electron as it's browser, also it's dependency you don't need to install anything. `nightmare = nightmare({ show: false })` behave just like headless browser in my opinion. if you want chrome as headless browser you may consider use puppeteer.off-topic: nighmare have become pretty passive about support (last commit march, no replay on issuses). also evaluate some time give me very nasty memory leak. time for swich to something better",
0,0.2,0,0,"i get this same error on mac, but not on windows```{ error: navigation error    at unserializeerror ```",
0,0,0,0.2,problem was solved by updating nightmare to the latest version.,
0,0,0,0,> ✅ do not enable experimental features> > we don't disable experimental featureshopefully one of these words is backwards?,
0,0.1,0,0,"**not fixed in node 10.9.0**windows version 10.0.17134.228 build 17134nightmare 3.0.1assertion failed: frame_header.payload_length == sizeof xfer_info, file src\win\pipe.c, line 1708",
0,0,0,0.1,thanks!,
0,0.2,0,0,i have the same issue,
0,0,0,0,"if you look for a quick solution to extend nightmare with actions like `.middleclick`, `.ctrlclick()` etc., i just released [nightmare-advanced-click](/wojtekmaj/nightmare-advanced-click) :)",
0,0,0,0.1,i ended up switching tp puppeteer to solve the problem.,
0,0,0,0,https://github.com/rosshinkley/nightmare-iframe-manager,
0,0,0,0.4,@matthewmueller 's solution works fine. thanks.this would be a nice feature in nightmarejs!,
